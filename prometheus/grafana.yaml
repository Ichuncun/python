apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: grafana
  name: grafana
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: init-chown-data
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ["chown", "-R", "472:472", "/var/lib/grafana/"]
        volumeMounts:
        - mountPath: /var/lib/grafana/
          name: grafana-persistent-storage
      containers:
      - env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        # template cluster 1621 pod 6417
        image: grafana/grafana:latest 
        imagePullPolicy: IfNotPresent
        name: grafana
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: 3000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana/
          name: grafana-persistent-storage
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: grafana-persistent-storage
